//*****************************
// PRODUCT = Abstraktes Produkt
//       Definiert die gemeinsame Schnittstelle für alle Produkte = operation()

public interface Product {
    void operation();
}

//*****************************
// CONCRETE PRODUCT = Konkretes Produkt
//       Implementiert die spezifische Funktionalität = operation()

public class ConcreteProductA implements Product {
    @Override
    public void operation() {
        System.out.println("Produkt A wurde erstellt.");
    }
}

public class ConcreteProductB implements Product {
    @Override
    public void operation() {
        System.out.println("Produkt B wurde erstellt.");
    }
}

//*****************************
// FACTORY = Fabrik
//       Erzeugt und gibt Produkte basierend auf Eingaben zurück = createProduct()

public class Factory {
    public static Product createProduct(String type) {
        if (type.equalsIgnoreCase("A")) {
            return new ConcreteProductA();
        } else if (type.equalsIgnoreCase("B")) {
            return new ConcreteProductB();
        }
        throw new IllegalArgumentException("Unbekannter Produkttyp: " + type);
    }
}

//*****************************
// CLIENT = Hauptprogramm
//       Fordert Produkte von der Fabrik an und verwendet sie = factory.createProduct()

public class Client {
    public static void main(String[] args) {
        // Produkt A erstellen
        Product produktA = Factory.createProduct("A");
        produktA.operation(); // Ausgabe: "Produkt A wurde erstellt."

        // Produkt B erstellen
        Product produktB = Factory.createProduct("B");
        produktB.operation(); // Ausgabe: "Produkt B wurde erstellt."
    }
}
